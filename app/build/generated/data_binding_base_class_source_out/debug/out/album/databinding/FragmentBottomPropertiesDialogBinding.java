// Generated by view binder compiler. Do not edit!
package album.databinding;

import album.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBottomPropertiesDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView rvColors;

  @NonNull
  public final SeekBar sbOpacity;

  @NonNull
  public final SeekBar sbSize;

  @NonNull
  public final TextView txtBrushSize;

  @NonNull
  public final TextView txtOpacity;

  private FragmentBottomPropertiesDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView rvColors, @NonNull SeekBar sbOpacity, @NonNull SeekBar sbSize,
      @NonNull TextView txtBrushSize, @NonNull TextView txtOpacity) {
    this.rootView = rootView;
    this.rvColors = rvColors;
    this.sbOpacity = sbOpacity;
    this.sbSize = sbSize;
    this.txtBrushSize = txtBrushSize;
    this.txtOpacity = txtOpacity;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBottomPropertiesDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBottomPropertiesDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_bottom_properties_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBottomPropertiesDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rvColors;
      RecyclerView rvColors = ViewBindings.findChildViewById(rootView, id);
      if (rvColors == null) {
        break missingId;
      }

      id = R.id.sbOpacity;
      SeekBar sbOpacity = ViewBindings.findChildViewById(rootView, id);
      if (sbOpacity == null) {
        break missingId;
      }

      id = R.id.sbSize;
      SeekBar sbSize = ViewBindings.findChildViewById(rootView, id);
      if (sbSize == null) {
        break missingId;
      }

      id = R.id.txtBrushSize;
      TextView txtBrushSize = ViewBindings.findChildViewById(rootView, id);
      if (txtBrushSize == null) {
        break missingId;
      }

      id = R.id.txtOpacity;
      TextView txtOpacity = ViewBindings.findChildViewById(rootView, id);
      if (txtOpacity == null) {
        break missingId;
      }

      return new FragmentBottomPropertiesDialogBinding((ConstraintLayout) rootView, rvColors,
          sbOpacity, sbSize, txtBrushSize, txtOpacity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

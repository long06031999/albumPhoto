// Generated by view binder compiler. Do not edit!
package album.databinding;

import album.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ja.burhanrashid52.photoeditor.PhotoEditorView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView_;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView imgCamera;

  @NonNull
  public final ImageView imgClose;

  @NonNull
  public final ImageView imgGallery;

  @NonNull
  public final ImageView imgRedo;

  @NonNull
  public final ImageView imgSave;

  @NonNull
  public final ImageView imgShare;

  @NonNull
  public final ImageView imgUndo;

  @NonNull
  public final PhotoEditorView photoEditorView;

  @NonNull
  public final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView rvConstraintTools;

  @NonNull
  public final RecyclerView rvFilterView;

  @NonNull
  public final TextView txtCurrentTool;

  private FragmentEditBinding(@NonNull ConstraintLayout rootView_, @NonNull Guideline guideline,
      @NonNull ImageView imgCamera, @NonNull ImageView imgClose, @NonNull ImageView imgGallery,
      @NonNull ImageView imgRedo, @NonNull ImageView imgSave, @NonNull ImageView imgShare,
      @NonNull ImageView imgUndo, @NonNull PhotoEditorView photoEditorView,
      @NonNull ConstraintLayout rootView, @NonNull RecyclerView rvConstraintTools,
      @NonNull RecyclerView rvFilterView, @NonNull TextView txtCurrentTool) {
    this.rootView_ = rootView_;
    this.guideline = guideline;
    this.imgCamera = imgCamera;
    this.imgClose = imgClose;
    this.imgGallery = imgGallery;
    this.imgRedo = imgRedo;
    this.imgSave = imgSave;
    this.imgShare = imgShare;
    this.imgUndo = imgUndo;
    this.photoEditorView = photoEditorView;
    this.rootView = rootView;
    this.rvConstraintTools = rvConstraintTools;
    this.rvFilterView = rvFilterView;
    this.txtCurrentTool = txtCurrentTool;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.imgCamera;
      ImageView imgCamera = ViewBindings.findChildViewById(rootView, id);
      if (imgCamera == null) {
        break missingId;
      }

      id = R.id.imgClose;
      ImageView imgClose = ViewBindings.findChildViewById(rootView, id);
      if (imgClose == null) {
        break missingId;
      }

      id = R.id.imgGallery;
      ImageView imgGallery = ViewBindings.findChildViewById(rootView, id);
      if (imgGallery == null) {
        break missingId;
      }

      id = R.id.imgRedo;
      ImageView imgRedo = ViewBindings.findChildViewById(rootView, id);
      if (imgRedo == null) {
        break missingId;
      }

      id = R.id.imgSave;
      ImageView imgSave = ViewBindings.findChildViewById(rootView, id);
      if (imgSave == null) {
        break missingId;
      }

      id = R.id.imgShare;
      ImageView imgShare = ViewBindings.findChildViewById(rootView, id);
      if (imgShare == null) {
        break missingId;
      }

      id = R.id.imgUndo;
      ImageView imgUndo = ViewBindings.findChildViewById(rootView, id);
      if (imgUndo == null) {
        break missingId;
      }

      id = R.id.photoEditorView;
      PhotoEditorView photoEditorView = ViewBindings.findChildViewById(rootView, id);
      if (photoEditorView == null) {
        break missingId;
      }

      ConstraintLayout rootView_ = (ConstraintLayout) rootView;

      id = R.id.rvConstraintTools;
      RecyclerView rvConstraintTools = ViewBindings.findChildViewById(rootView, id);
      if (rvConstraintTools == null) {
        break missingId;
      }

      id = R.id.rvFilterView;
      RecyclerView rvFilterView = ViewBindings.findChildViewById(rootView, id);
      if (rvFilterView == null) {
        break missingId;
      }

      id = R.id.txtCurrentTool;
      TextView txtCurrentTool = ViewBindings.findChildViewById(rootView, id);
      if (txtCurrentTool == null) {
        break missingId;
      }

      return new FragmentEditBinding((ConstraintLayout) rootView, guideline, imgCamera, imgClose,
          imgGallery, imgRedo, imgSave, imgShare, imgUndo, photoEditorView, rootView_,
          rvConstraintTools, rvFilterView, txtCurrentTool);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

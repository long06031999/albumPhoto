// Generated by view binder compiler. Do not edit!
package album.databinding;

import album.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentViewPhotoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout bottomBar;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final ImageView btnEdit;

  @NonNull
  public final ImageView btnLove;

  @NonNull
  public final ImageView btnOptions;

  @NonNull
  public final ImageView btnSearch;

  @NonNull
  public final ImageView btnShare;

  @NonNull
  public final ImageView btnVisible;

  @NonNull
  public final RecyclerView rcvListPhoto;

  @NonNull
  public final Toolbar toolBarEdit;

  @NonNull
  public final ViewPager viewPager;

  private FragmentViewPhotoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout bottomBar, @NonNull ImageView btnBack, @NonNull ImageView btnDelete,
      @NonNull ImageView btnEdit, @NonNull ImageView btnLove, @NonNull ImageView btnOptions,
      @NonNull ImageView btnSearch, @NonNull ImageView btnShare, @NonNull ImageView btnVisible,
      @NonNull RecyclerView rcvListPhoto, @NonNull Toolbar toolBarEdit,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.bottomBar = bottomBar;
    this.btnBack = btnBack;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.btnLove = btnLove;
    this.btnOptions = btnOptions;
    this.btnSearch = btnSearch;
    this.btnShare = btnShare;
    this.btnVisible = btnVisible;
    this.rcvListPhoto = rcvListPhoto;
    this.toolBarEdit = toolBarEdit;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentViewPhotoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentViewPhotoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_view_photo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentViewPhotoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomBar;
      ConstraintLayout bottomBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomBar == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      ImageView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      ImageView btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnLove;
      ImageView btnLove = ViewBindings.findChildViewById(rootView, id);
      if (btnLove == null) {
        break missingId;
      }

      id = R.id.btnOptions;
      ImageView btnOptions = ViewBindings.findChildViewById(rootView, id);
      if (btnOptions == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      ImageView btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.btnShare;
      ImageView btnShare = ViewBindings.findChildViewById(rootView, id);
      if (btnShare == null) {
        break missingId;
      }

      id = R.id.btnVisible;
      ImageView btnVisible = ViewBindings.findChildViewById(rootView, id);
      if (btnVisible == null) {
        break missingId;
      }

      id = R.id.rcvListPhoto;
      RecyclerView rcvListPhoto = ViewBindings.findChildViewById(rootView, id);
      if (rcvListPhoto == null) {
        break missingId;
      }

      id = R.id.toolBarEdit;
      Toolbar toolBarEdit = ViewBindings.findChildViewById(rootView, id);
      if (toolBarEdit == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentViewPhotoBinding((ConstraintLayout) rootView, bottomBar, btnBack,
          btnDelete, btnEdit, btnLove, btnOptions, btnSearch, btnShare, btnVisible, rcvListPhoto,
          toolBarEdit, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
